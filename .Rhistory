yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
lbs.workcalls
levels(adult.data$workclass)[1] <- 'Desconocido'
# gsub se utiliza para reemplazar todo aquellos que empieza por una determinada
adult.data$workclass <- gsub('^Federal-gov', 'Gobierno', adult.data$workclass)
adult.data$workclass <- gsub('^Local-gov', 'Gobierno', adult.data$workclass)
adult.data$workclass <- gsub('^State-gov', 'Gobierno', adult.data$workclass)
adult.data$workclass <- gsub('^Self-emp-inc', 'Autonomo', adult.data$workclass)
adult.data$workclass <- gsub('^Self-emp-not-inc', 'Autonomo', adult.data$workclass)
adult.data$workclass <- gsub('^Never-worked', 'Otros', adult.data$workclass)
adult.data$workclass <- gsub('^Without-pay', 'Otros', adult.data$workclass)
adult.data$workclass <- gsub('^Other', 'Otros', adult.data$workclass)
adult.data$workclass <- gsub('^Desconocido', 'Otros', adult.data$workclass)
adult.data$workclass <- as.factor(adult.data$workclass)
summary(adult.data$workclass)
# Vamos a establecer los porcentajes
count.private.plus.50 = table(adult.data[adult.data$workclass == 'Private', ]$income)[1]
count.private.minor.50 = table(adult.data[adult.data$workclass == 'Private', ]$income)[2]
pct.count.private.plus.50 = (count.private.plus.50 / (count.private.plus.50 + count.private.minor.50)) * 100
pct.count.private.minor.50 = 100 - pct.count.private.plus.50
pct.count.private.plus.50 = round(pct.count.private.plus.50, digits = 2)
pct.count.private.minor.50 = round(pct.count.private.minor.50, digits = 2)
count.gobierno.plus.50 = table(adult.data[adult.data$workclass == 'Gobierno', ]$income)[1]
count.gobierno.minor.50 = table(adult.data[adult.data$workclass == 'Gobierno', ]$income)[2]
pct.count.gobierno.plus.50 = (count.gobierno.plus.50 / (count.gobierno.plus.50 + count.gobierno.minor.50))*100
pct.count.gobierno.minor.50 = 100 - pct.count.gobierno.plus.50
pct.count.gobierno.plus.50 = round(pct.count.gobierno.plus.50, digits = 2)
pct.count.gobierno.minor.50 = round(pct.count.gobierno.minor.50, digits = 2)
count.autonomo.plus.50 = table(adult.data[adult.data$workclass == 'Autonomo', ]$income)[1]
count.autonomo.minor.50 = table(adult.data[adult.data$workclass == 'Autonomo', ]$income)[2]
pct.count.autonomo.plus.50 = (count.autonomo.plus.50 / (count.autonomo.minor.50 + count.autonomo.plus.50))*100
pct.count.autonomo.minor.50 = 100 - pct.count.autonomo.plus.50
pct.count.autonomo.plus.50 = round(pct.count.autonomo.plus.50, digits = 2)
pct.count.autonomo.minor.50 = round(pct.count.autonomo.minor.50, digits = 2)
count.otros.plus.50 = table(adult.data[adult.data$workclass == 'Otros', ]$income)[1]
count.otros.minor.50 = table(adult.data[adult.data$workclass == 'Otros', ]$income)[2]
pct.count.otros.plus.50 = (count.otros.plus.50 / (count.otros.plus.50 + count.otros.minor.50))*100
pct.count.otros.minor.50 = 100 - pct.count.otros.plus.50
pct.count.otros.plus.50 = round(pct.count.otros.plus.50, digits = 2)
pct.count.otros.minor.50 = round(pct.count.otros.minor.50, digits = 2)
lbls.workcalls.private.up = paste(paste(">50K - ", pct.count.private.plus.50), "%", sep = "")
lbls.workcalls.private.down = paste(paste("<= 50K - ", pct.count.private.minor.50), "%", sep = "")
lbls.work.private = c(lbls.workcalls.private.up, lbls.workcalls.private.down)
lbls.workcalls.gobierno.up = paste(paste(">50K - ", pct.count.gobierno.plus.50), "%", sep = "")
lbls.workcalls.gobierno.down = paste(paste("<= 50K - ", pct.count.gobierno.minor.50), "%", sep = "")
lbls.work.gobierno =c(lbls.workcalls.gobierno.up, lbls.workcalls.gobierno.down)
lbls.workcalls.autonomo.up = paste(paste(">50K - ", pct.count.autonomo.plus.50), "%", sep = "")
lbls.workcalls.autonomo.down = paste(paste("<= 50K - ", pct.count.autonomo.minor.50), "%", sep = "")
lbls.work.autonomo = c(lbls.workcalls.autonomo.up, lbls.workcalls.autonomo.down)
lbls.workcalls.otros.up = paste(paste(">50K - ", pct.count.otros.plus.50), "%", sep = "")
lbls.workcalls.otros.down = paste(paste("<= 50K - ", pct.count.otros.minor.50), "%", sep = "")
lbls.work.otros = c(lbls.workcalls.otros.up, lbls.workcalls.otros.down)
par(mfrow=c(2,2))
pie(table(adult.data[adult.data$workclass == 'Private', ]$income), col = c("blue", "gray"),  main = "Sector privado", labels = lbls.work.private)
pie(table(adult.data[adult.data$workclass == 'Gobierno', ]$income), col = c("blue", "gray"), main = "Sector público", labels = lbls.work.gobierno)
pie(table(adult.data[adult.data$workclass == 'Autonomo', ]$income), col = c("blue", "gray"), main = "Autónomos", labels = lbls.work.autonomo)
pie(table(adult.data[adult.data$workclass == 'Otros', ]$income), col = c("blue", "gray"), main = "Otros", labels = lbls.work.otros)
chisq.test(table(adult.data$workclass, adult.data$income))
summary(adult.data$marital_status)
lbs.marital.status = count(table(adult.data$marital_status))$x.Var1
lbs.marital.status <- plot_ly(adult.data, labels = lbs.marital.status, values = table(adult.data$marital_status), type = 'pie')
lbs.marital.status <- lbs.marital.status %>% layout(title = 'Histograma de los estados civiles',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
lbs.marital.status
adult.data$marital_status <- gsub('^Married-civ-spouse', 'Married', adult.data$marital_status)
adult.data$marital_status <- gsub('^Married-spouse-absent', 'Married', adult.data$marital_status)
adult.data$marital_status <- gsub('^Married-AF-spouse', 'Married', adult.data$marital_status)
adult.data$marital_status <- gsub('^Separated', 'Separated', adult.data$marital_status)
adult.data$marital_status <- gsub('^Divorced', 'Separated', adult.data$marital_status)
adult.data$marital_status <- as.factor(adult.data$marital_status)
summary(adult.data$marital_status)
df3 <- data.frame(table(adult.data$income, adult.data$marital_status))
names(df3) <- c('income', 'marital_status', 'count')
df3
# calculate the percentages
df3 <- ddply(df3, .(marital_status), transform, percent = count/sum(count) * 100)
# format the labels and calculate their positions
df3 <- ddply(df3, .(marital_status), transform, pos = (cumsum(count) - 0.5 * count))
df3$label <- paste0(sprintf("%.0f", df3$percent), "%")
# bar plot of counts by marital status with in group proportions
ggplot(df3, aes(x = marital_status, y = count, fill = income)) +
geom_bar(stat = "identity") +
geom_text(aes(label = df3$label), size = 2.25) +
ggtitle('Income Level with Marital Status')
chisq.test(table(adult.data$marital_status, adult.data$income))
summary(adult.data$occupation)
levels(adult.data$occupation)[1] <- 'Desconocido'
lbs.ocupation = count(table(adult.data$occupation))$x.Var1
lbs.ocupation <- plot_ly(adult.data, labels = lbs.ocupation, values = table(adult.data$occupation), type = 'pie')
lbs.ocupation <- lbs.ocupation %>% layout(title = 'Histograma de tipo de ocupaciones profesionales',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
lbs.ocupation
adult.data$occupation <- gsub('Adm-clerical', 'Oficina', adult.data$occupation)
adult.data$occupation <- gsub('Craft-repair', 'Proletario', adult.data$occupation)
adult.data$occupation <- gsub('Exec-managerial', 'Oficina', adult.data$occupation)
adult.data$occupation <- gsub('Farming-fishing', 'Primario', adult.data$occupation)
adult.data$occupation <- gsub('Handlers-cleaners', 'Proletario', adult.data$occupation)
adult.data$occupation <- gsub('Machine-op-inspct', 'Industrial', adult.data$occupation)
adult.data$occupation <- gsub('Other-service', 'Servicios', adult.data$occupation)
adult.data$occupation <- gsub('Priv-house-serv', 'Proletario', adult.data$occupation)
adult.data$occupation <- gsub('Prof-specialty', 'Docencia', adult.data$occupation)
adult.data$occupation <- gsub('Protective-serv', 'Servicios', adult.data$occupation)
adult.data$occupation <- gsub('Tech-support', 'Servicios', adult.data$occupation)
adult.data$occupation <- gsub('Transport-moving', 'Proletario', adult.data$occupation)
adult.data$occupation <- gsub('Unknown', 'Otros', adult.data$occupation)
adult.data$occupation <- gsub('Armed-Forces', 'Militar', adult.data$occupation)
adult.data$occupation <- as.factor(adult.data$occupation)
summary(adult.data$occupation)
df2 <- data.frame(table(adult.data$income, adult.data$occupation))
names(df2) <- c('income', 'occupation', 'count')
df2
df2 <- ddply(df2, .(occupation), transform, percent = count/sum(count) * 100)
# format the labels and calculate their positions
df2 <- ddply(df2, .(occupation), transform, pos = (cumsum(count) - 0.5 * count))
df2$label <- paste0(sprintf("%.0f", df2$percent), "%")
# bar plot of counts by occupation with in group proportions
ggplot(df2, aes(x = occupation, y = count, fill = income)) +
geom_bar(stat = "identity") +
geom_text(aes(label = label), size = 2.5) +
ggtitle('Nivel de ingresos por tipos de ocupación')
chisq.test(table(adult.data$marital_status, adult.data$income))
summary(adult.data$relationship)
lbs.relationship = count(table(adult.data$relationship))$x.Var1
lbs.relationship <- plot_ly(adult.data, labels = lbs.relationship, values = table(adult.data$relationship), type = 'pie')
lbs.relationship <- lbs.relationship %>% layout(title = 'Histograma de roles en la familia',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
lbs.relationship
df3 <- data.frame(table(adult.data$income, adult.data$relationship))
names(df3) <- c('income', 'relationship', 'count')
df3 <- ddply(df3, .(relationship), transform, percent = count/sum(count) * 100)
# format the labels and calculate their positions
df3 <- ddply(df3, .(relationship), transform, pos = (cumsum(count) - 0.5 * count))
df3$label <- paste0(sprintf("%.0f", df3$percent), "%")
# bar plot of counts by occupation with in group proportions
ggplot(df3, aes(x = relationship, y = count, fill = income)) +
geom_bar(stat = "identity") +
geom_text(aes(label = label), size = 2.5) +
ggtitle('Nivel de ingresos por tipos de ocupación')
summary(adult.data$race)
lbs.race = count(table(adult.data$race))$x.Var1
lbs.race <- plot_ly(adult.data, labels = lbs.race, values = table(adult.data$race), type = 'pie')
lbs.race <- lbs.race %>% layout(title = 'Histograma del censo por razas',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
lbs.race
adult.data$race <- gsub('^Amer-Indian-Eskimo', 'Rest', adult.data$race)
adult.data$race <- gsub('^Asian-Pac-Islander', 'Rest', adult.data$race)
adult.data$race <- gsub('^Other', 'Rest', adult.data$race)
adult.data$race <- as.factor(adult.data$race)
summary(adult.data$race)
spineplot(adult.data$income ~ adult.data$race, col = c("gray", "blue"), xlab = "Razas", ylab = "Ingreso", main = "Ingreso por razas", axes = TRUE)
# Vamos a establecer los porcentajes
count.white.plus.50 = table(adult.data[adult.data$race == 'White', ]$income)[1]
count.white.minor.50 = table(adult.data[adult.data$race == 'White', ]$income)[2]
pct.count.white.plus.50 = (count.white.plus.50 / (count.white.plus.50 + count.white.minor.50)) * 100
pct.count.white.minor.50 = 100 - pct.count.white.plus.50
pct.count.white.plus.50 = round(pct.count.white.plus.50, digits = 2)
pct.count.white.minor.50 = round(pct.count.white.minor.50, digits = 2)
count.black.plus.50 = table(adult.data[adult.data$race == 'Black', ]$income)[1]
count.black.minor.50 = table(adult.data[adult.data$race == 'Black', ]$income)[2]
pct.count.black.plus.50 = (count.black.plus.50 / (count.black.plus.50 + count.black.minor.50))*100
pct.count.black.minor.50 = 100 - pct.count.black.plus.50
pct.count.black.plus.50 = round(pct.count.black.plus.50, digits = 2)
pct.count.black.minor.50 = round(pct.count.black.minor.50, digits = 2)
count.otros.plus.50 = table(adult.data[adult.data$race == 'Rest', ]$income)[1]
count.otros.minor.50 = table(adult.data[adult.data$race == 'Rest', ]$income)[2]
pct.count.otros.plus.50 = (count.otros.plus.50 / (count.otros.plus.50 + count.otros.minor.50))*100
pct.count.otros.minor.50 = 100 - pct.count.otros.plus.50
pct.count.otros.plus.50 = round(pct.count.otros.plus.50, digits = 2)
pct.count.otros.minor.50 = round(pct.count.otros.minor.50, digits = 2)
lbls.white.up = paste(paste("(<=50K) ", pct.count.white.plus.50), "%", sep = "")
lbls.white.down = paste(paste("(>50K) ", pct.count.white.minor.50), "%", sep = "")
lbls.race.white = c(lbls.white.up, lbls.white.down)
lbls.black.up = paste(paste("(<=50K) ", pct.count.black.plus.50), "%", sep = "")
lbls.black.down = paste(paste("(>50K) ", pct.count.black.minor.50), "%", sep = "")
lbls.race.black =c(lbls.black.up, lbls.black.down)
lbls.otros.up = paste(paste("(<=50K) ", pct.count.otros.plus.50), "%", sep = "")
lbls.otros.down = paste(paste("(>50K) ", pct.count.otros.minor.50), "%", sep = "")
lbls.race.otros = c(lbls.otros.up, lbls.otros.down)
par(mfrow=c(2,2))
pie(table(adult.data[adult.data$race == 'White', ]$income), col = c("orange", "blue"),  main = "Blancos", labels = lbls.race.white)
pie(table(adult.data[adult.data$race == 'Black', ]$income), col = c("orange", "blue"), main = "Afro-Americanos", labels = lbls.race.black)
pie(table(adult.data[adult.data$race == 'Rest', ]$income), col = c("orange", "blue"), main = "Otros", labels = lbls.race.otros)
summary(adult.data$sex)
spineplot(table(adult.data$sex, adult.data$income), col = )
count.male.plus.50 = table(adult.data[adult.data$sex == 'Male', ]$income)[1]
count.male.minor.50 = table(adult.data[adult.data$sex == 'Male', ]$income)[2]
pct.count.male.plus.50 = (count.male.plus.50 / (count.male.plus.50 + count.male.minor.50)) * 100
pct.count.male.minor.50 = 100 - pct.count.male.plus.50
pct.count.male.plus.50 = round(pct.count.male.plus.50, digits = 2)
pct.count.male.minor.50 = round(pct.count.male.minor.50, digits = 2)
count.female.plus.50 = table(adult.data[adult.data$sex == 'Female', ]$income)[1]
count.female.minor.50 = table(adult.data[adult.data$sex == 'Female', ]$income)[2]
pct.count.female.plus.50 = (count.female.plus.50 / (count.female.plus.50 + count.female.minor.50))*100
pct.count.female.minor.50 = 100 - pct.count.female.plus.50
pct.count.female.plus.50 = round(pct.count.female.plus.50, digits = 2)
pct.count.female.minor.50 = round(pct.count.female.minor.50, digits = 2)
lbls.male.up = paste(paste("(<=50K) ", pct.count.male.plus.50), "%", sep = "")
lbls.male.down = paste(paste("(>50K) ", pct.count.male.minor.50), "%", sep = "")
lbls.sex.male = c(lbls.male.up, lbls.male.down)
lbls.female.up = paste(paste("(<=50K) ", pct.count.female.plus.50), "%", sep = "")
lbls.female.down = paste(paste("(>50K) ", pct.count.female.minor.50), "%", sep = "")
lbls.sex.female =c(lbls.female.up, lbls.female.down)
par(mfrow=c(1,2))
pie(table(adult.data[adult.data$sex == 'Male', ]$income), col = c("orange", "blue"),  main = "Ingreso por hombres", labels = lbls.sex.male)
pie(table(adult.data[adult.data$sex == 'Female', ]$income), col = c("orange", "blue"), main = "Ingreso por mujeres", labels = lbls.sex.female)
chisq.test(table(adult.data$sex, adult.data$income))
dens<- density (adult.data$age, na.rm=T)
hist(adult.data$age, xlab="", main = "EDAD", ylim= c (0, max (dens $ y) * 1.1),probability= lines(dens)
rug (jitter(adult.data$age))
dens<- density (adult.data$age, na.rm=T)
hist(adult.data$age, xlab="", main = "EDAD", ylim= c (0, max (dens $ y) * 1.1),probability= lines(dens))
dens<- density (adult.data$age, na.rm=T)
hist(adult.data$age, xlab="", main = "EDAD", ylim= c (0, max (dens $ y) * 1.1),probability= lines(dens))
dens<- density(adult.data$age, na.rm=T)
hist(adult.data$age, xlab="", main = "EDAD", ylim= c (0, max (dens$y) * 1.1), probability= lines(dens))
plot(dens)
dens<- density(adult.data$age, na.rm=T)
plot(dens)
hist(adult.data$age, xlab="", main = "EDAD", ylim= c (0, max (dens$y) * 1.1), probability= lines(dens))
dens<- density(adult.data$age, na.rm=T)
plot(adult.data$age, xlab="", main = "EDAD", ylim= c (0, max (dens$y) * 1.1), probability= lines(dens))
rug (jitter(adult.data$age))
plot(adult.data$age, xlab="", main = "EDAD")
hist(dens)
dens<- density(adult.data$age, na.rm=T)
hist(dens)
dens<- density(adult.data$age, na.rm=T)
plot(dens)
rug (jitter(adult.data$age))
plot(dens, main = "")
rug (jitter(adult.data$age))
rug (jitter(dens))
dens<- density(adult.data$age, na.rm=T)
plot(dens, main = "")
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='black')
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='black') + theme_void()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='black') + theme_bw()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='black') + theme_bw() + theme_classic()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='black') + theme_bw() + theme_classic() + theme_linedraw()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='black') + theme_bw() + theme_classic() + theme_linedraw() + theme_update()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='white') + theme_bw() + theme_update()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=0.5, color='black') + theme_bw() + theme_update()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1.5, color='black') + theme_bw() + theme_update()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='black') + theme_bw() + theme_update()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='black') + theme_bw() + theme_update() + theme_get()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='black') + theme_bw() + theme_update() + theme_linedraw()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='black') + theme_bw() + theme_update()
ggplot(adult) + aes(x=as.numeric(age), group=sex, fill=sex) +
geom_histogram(binwidth=1, color='black')
ggplot(adult.data) + aes(x=as.numeric(age), group=sex, fill=sex) +
geom_histogram(binwidth=1, color='black')
ggplot(adult.data) + aes(x=as.numeric(age), group=sex, fill=sex) +
geom_histogram(binwidth=1, color='black') + theme_bw() + theme_update()
ggplot(adult.data) + aes(x=as.numeric(age), group=income, fill=income) +
geom_histogram(binwidth=1, color='black')
sum(is.na(adult.data$age))
summary(adult.data$age)
table(adult.data$age, adult.data$income)
plot(table(adult.data$age, adult.data$income))
boxplot(table(adult.data$age, adult.data$income))
spineplot(table(adult.data$age, adult.data$income))
spineplot(table(adult.data$age, adult.data$income), col = c("blue", "gray"))
spineplot(table(adult.data$age, adult.data$income), col = c("gray", "blue"))
spineplot(table(adult.data$age, adult.data$income), col = c("blue", "gray"))
spineplot(table(adult.data$age, adult.data$sex), col = c("blue", "gray"))
spineplot(table(adult.data$age, adult.data$sex), col = c("pink", "blue"))
spineplot(table(adult.data$age, adult.data$sex), col = c("pink", "blue"))
spineplot(table(adult.data$age, adult.data$sex), col = c("pink", "blue"))
spineplot(table(adult.data$age, adult.data$sex), col = c("pink", "blue"))
ggplot(adult.data) + aes(x=as.numeric(capital_gain), group=income, fill=income) +
geom_histogram(binwidth=1, color='black') + theme_bw() + theme_update()
summary(adult.data$capital_gain)
# histogram of capital_gain
ggplot(adult) + aes(x=as.numeric(capital_gain), group=income, fill=income) +
geom_histogram(bins=10, color='black') + ggtitle('Histogram of Capital Gain')
# histogram of capital_gain
ggplot(adult.data) + aes(x=as.numeric(capital_gain), group=income, fill=income) +
geom_histogram(bins=10, color='black') + ggtitle('Histogram of Capital Gain')
# histogram of capital_gain
ggplot(adult.data) + aes(x=as.numeric(capital_gain), group=income, fill=income) +
geom_histogram(bins=10, color='black') + ggtitle('Histogram of Capital Gain')
# histogram of capital_gain
ggplot(adult.data) + aes(x=as.numeric(capital_loss), group=income, fill=income) +
geom_histogram(bins=10, color='black') + ggtitle('Histogram of Capital Loss')
table(adult.data$capital_gain)
table(adult.data$capital_gain, adult.data$income)
plot(table(adult.data$capital_gain, adult.data$income))
# histogram of capital_gain
ggplot(adult.data) + aes(x=as.numeric(capital_gain), group=income, fill=income) +
geom_histogram(bins=10) + ggtitle('Histogram of Capital Gain')
# histogram of capital_gain
ggplot(adult.data) + aes(x=as.numeric(capital_gain), group=income, fill=income) +
geom_histogram(bins=10) + ggtitle('Histogram of Capital Gain')
# histogram of capital_gain
ggplot(adult.data) + aes(x=as.numeric(capital_gain), group=income, fill=income) +
geom_histogram(bins=1) + ggtitle('Histogram of Capital Gain')
# histogram of capital_gain
ggplot(adult.data) + aes(x=as.numeric(capital_gain), group=income, fill=income) +
geom_histogram(bins=5) + ggtitle('Histogram of Capital Gain')
# histogram of capital_gain
ggplot(adult.data) + aes(x=as.numeric(capital_loss), group=income, fill=income) +
geom_histogram(bins=5) + ggtitle('Histogram of Capital Loss')
# histogram of capital_gain
ggplot(adult.data) + aes(x=as.numeric(capital_loss), group=income, fill=income) +
geom_histogram(bins=10) + ggtitle('Histogram of Capital Loss')
summary(adult.data$hours_per_week)
sum(is.na(adult.data$hours_per_week))
summary(adult.data$hours_per_week)
boxplot(table(adult.data$hours_per_week))
plot(table(adult.data$hours_per_week))
dens<- density(adult.data$hours_per_week,na.rm=T)
hist(adult.data$hours_per_week, xlab="", main = "EDAD(age)", ylim= c (0, max (dens $ y) * 1.1),probability= lines(dens))
dens<- density(adult.data$hours_per_week,na.rm=T)
rug (jitter(adult.data$hours_per_week))
plot(dens)
hist(dens)
table(adult.data$hours_per_week)
plot(table(adult.data$hours_per_week))
barplot(table(adult.data$hours_per_week))
hist(adult.data$hours_per_week, breaks = 40)
barplot(table(adult.data$hours_per_week))
hist(adult.data$hours_per_week, breaks = 40)
barplot(table(adult.data$hours_per_week))
# histogram of capital_gain
ggplot(adult.data) + aes(x=as.numeric(hours_per_week), group=income, fill=income) +
geom_histogram(bins=10, color='black') + ggtitle('Histogram of Capital Gain')
# histogram of capital_gain
ggplot(adult.data) + aes(x=as.numeric(hours_per_week), group=income, fill=income) +
geom_histogram(bins=10, color='black') + ggtitle('Histogram of Hours per week')
str(train.data)
str(train.data)
train.data$race <- NULL
train.data$sex <- NULL
train.data$race <- NULL
train.data$sex <- NULL
str(train.data)
train.num.data <- train.data
cor(train.data[, 1:9])
train.num.data <- train.data
train.num.data$workclass <- NULL
train.num.data$marital_status <- NULL
train.num.data$occupation <- NULL
train.num.data$native_country <- NULL
train.num.data$income <- NULL
train.num.data <- train.data
train.num.data$workclass <- NULL
train.num.data$marital_status <- NULL
train.num.data$occupation <- NULL
train.num.data$native_country <- NULL
train.num.data$income <- NULL
str(train.num.data)
train.num.data <- train.data
levels(train.num.data$workclass)
str(train.num.data)
sz <- round(.8 * dim(adult.data)[1])  # training set size
training_set <- adult.data[1:sz,]
testing_set <- adult.data[-(1:sz),]
training_set
adult.data$race <- NULL
sz <- round(.8 * dim(adult.data)[1])  # training set size
training_set <- adult.data[1:sz,]
testing_set <- adult.data[-(1:sz),]
adult.data$fnlwgt <- NULL
adult.data$race <- NULL
adult.data$sex <- NULL
sz <- round(.8 * dim(adult.data)[1])  # training set size
training_set <- adult.data[1:sz,]
testing_set <- adult.data[-(1:sz),]
train.data
training_set
train.num.data <- training_set
str(train.num.data)
train.num.data <- training_set
str(train.num.data)
train.num.data$workclass <- NULL
train.num.data$educatoin <- NULL
train.num.data$marital_status <- NULL
train.num.data$occupation <- NULL
train.num.data$relationship <- NULL
train.num.data$native_country <- NULL
train.num.data$income <- NULL
train.num.data <- training_set
str(train.num.data)
train.num.data$workclass <- NULL
train.num.data$educatoin <- NULL
train.num.data$marital_status <- NULL
train.num.data$occupation <- NULL
train.num.data$relationship <- NULL
train.num.data$native_country <- NULL
train.num.data$income <- NULL
train.num.data
train.num.data <- training_set
str(train.num.data)
train.num.data$workclass <- NULL
train.num.data$educatoin <- NULL
train.num.data$marital_status <- NULL
train.num.data$occupation <- NULL
train.num.data$relationship <- NULL
train.num.data$native_country <- NULL
train.num.data$income <- NULL
str(train.num.data)
train.num.data <- training_set
train.num.data$workclass <- NULL
train.num.data$educatoin <- NULL
train.num.data$marital_status <- NULL
train.num.data$occupation <- NULL
train.num.data$relationship <- NULL
train.num.data$native_country <- NULL
train.num.data$income <- NULL
str(train.num.data)
train.num.data <- training_set
train.num.data = sapply(training_set, class) != "factor"
str(train.num.data)
train.num.data <- training_set
train.num.data = sapply(training_set, class) != "Factor"
str(train.num.data)
train.num.data <- training_set
train.num.data$workclass <- NULL
train.num.data$educatoin <- NULL
train.num.data$marital_status <- NULL
train.num.data$occupation <- NULL
train.num.data$relationship <- NULL
train.num.data$native_country <- NULL
train.num.data$income <- NULL
str(train.num.data)
corrplot::corrplot(train.num.data)
corrplot::corrplot(train.num.data[,])
cor(train.num.data[,])
corrplot::corrplot(cor(BEPS[,2:9]))
corrplot::corrplot(cor(train.num.data[,]))
cor(train.num.data[,])
m1 <- glm(income ~ ., data = training_set, family = binomial('logit'))
summary(m1)
training_set
str(training_set)
adult.data$fnlwgt <- NULL
adult.data$race <- NULL
adult.data$sex <- NULL
adult.data$educatoin <- NULL
sz <- round(.8 * dim(adult.data)[1])  # training set size
training_set <- adult.data[1:sz,]
testing_set <- adult.data[-(1:sz),]
str(training_set)
train.num.data <- training_set
train.num.data$workclass <- NULL
train.num.data$educatoin <- NULL
train.num.data$marital_status <- NULL
train.num.data$occupation <- NULL
train.num.data$relationship <- NULL
train.num.data$native_country <- NULL
train.num.data$income <- NULL
str(train.num.data)
cor(train.num.data[,])
corrplot::corrplot(cor(train.num.data[,]))
m1 <- glm(income ~ ., data = training_set, family = binomial('logit'))
summary(m1)
coef(m1)
summary(m1$coefficients)
summary(m1$fitted.values)
m1$coefficients
summary(m1)
confint(m1)
step(m_full, trace = F, scope = list(lower=formula(m_null), upper=formula(m_full)),
direction = 'backward')
m_full <- m1  # full model is the model just fitted
m_null <- glm(income ~ 1, data = training_set, family = binomial('logit'))
step(m_full, trace = F, scope = list(lower=formula(m_null), upper=formula(m_full)),
direction = 'backward')
step(m_full, trace = F, scope = list(lower=formula(m_null), upper=formula(m_full)),
direction = 'backward')
step(m_full, trace = F, scope = list(lower=formula(m_null), upper=formula(m_full)),
direction = 'forward')
step(m_full, trace = F, scope = list(lower=formula(m_null), upper=formula(m_full)),
direction = 'forward')
conf <- confint(m1, na.rm = TRUE)
conf <- confint(m1, na.rm = TRUE)
prob <- predict(m1, testing_set, type = 'response')
pred <- rep('<=50K', length(prob))
pred[prob>=.5] <- '>50K'
# confusion matrix
tb <- table(pred, testing_set$income)
tb
tb[1]
tb
tb[1,2]
tb
tb
tb
sum(tb)
pct.accuracy = tb[1,1] + tb[1,2]
sum(tb)
pct.accuracy = (tb[1,1] + tb[1,2])/sum(tb)
pct.accuracy
pct.accuracy = ((tb[1,1] + tb[1,2])/sum(tb))*100
pct.accuracy
